server {
    listen 80 default;

    server_name trendsmag;

    client_max_body_size 108M;

    root /application;

    # allow AJAX requests in themes and plugins
    location ~ ^/wp-admin/admin-ajax.php$ { allow all; include php.conf; }

    # Optional HTTP authentication for wp-login and wp-admin areas
    #location ~* /(wp-login\.php) {
    #    #limit_req zone=xwplogin burst=1 nodelay;
    #    auth_basic "Authorization Required";
    #    auth_basic_user_file /etc/nginx/htpasswd;
    #    include php.conf;
    #}
    #location ~* /wp-admin/.*\.php$ {
    #    auth_basic "Authorization Required";
    #    auth_basic_user_file /etc/nginx/htpasswd;
    #    include php.conf;
    #}

    #Deny access to wp-content folders for suspicious files
    location ~* ^/(wp-content)/(.*?)\.(zip|gz|tar|bzip2|7z)\$ { deny all; }
    location ~ ^/wp-content/uploads/sucuri { deny all; }
    location ~ ^/wp-content/updraft { deny all; }

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    location ~* /(?:uploads|files)/.*\.php\$ {
        deny all;
    }

    # Deny access to uploads that arenâ€™t images, videos, music, etc.
    location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf|css)$ {
        deny all;
    }

    # Block PHP files in content directory.
    location ~* /wp-content/.*\.php\$ {
      deny all;
    }
    # Block PHP files in includes directory.
    location ~* /wp-includes/.*\.php\$ {
      deny all;
    }
    # Block PHP files in uploads, content, and includes directory.
    location ~* /(?:uploads|files|wp-content|wp-includes)/.*\.php\$ {
      deny all;
    }

    # Make sure files with the following extensions do not get loaded by nginx because nginx would display the source code, and these files can contain PASSWORDS!
    location ~* \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)\$|^(\..*|Entries.*|Repository|Root|Tag|Template)\$|\.php_
    {
        return 444;
    }
    #nocgi
    location ~* \.(pl|cgi|py|sh|lua)\$ {
        return 444;
    }
    #disallow
    location ~* (w00tw00t) {
        return 444;
    }
    location ~* /(\.|wp-config\.php|wp-config\.txt|changelog\.txt|readme\.txt|readme\.html|license\.txt) { deny all; }

    # block hotlinking
    #location ~ .(gif|png|jpe?g)$ {
    #     valid_referers none blocked ${HOST} *.${HOST};
    #     if ($invalid_referer) {
    #        return   403;
    #    }
    #}
    index index.php;

    location / {
        try_files $uri $uri/ /index.php?$args;
    	# try_files $uri $uri/ /index.php?q=$uri&$args;
    }

    # Add trailing slash to */wp-admin requests.
    rewrite /wp-admin$ $scheme://$host$uri/ permanent;

    location ~ \.php$ {
        include php.conf;
        #try_files $uri /index.php =404;
        #fastcgi_pass php:9000;
        #fastcgi_index index.php;
        #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #include fastcgi_params;
    }

    #for trendsmag assets
    location /assets {
    	rewrite ^/assets/(.*) /web/wp-content/themes/tm/assets/$1 break;
    }
    location /plugins {
    	rewrite ^/plugins/(.*) /web/wp-content/plugins/$1 break;
    }
    location /files {
    	rewrite ^/files/(.*)/(.*)/(.*)/(.*)\.(jpg|jpeg|png|gif)$ /web/wp-content/uploads/cache/$1/$2/$3/$4.$5 break;
    }

    # Directives to send expires headers and turn off 404 error logging.
    #location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
    #       access_log off; log_not_found off; expires max;
    #}

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    #location ~ /\. {
    #    deny all;
    #}

    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    #location ~* /(?:uploads|files)/.*\.php$ {
    #    deny all;
    #}

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
